{"version":3,"sources":["components/Form.jsx","components/Todo.jsx","components/TodoList.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","type","value","className","onChange","e","console","log","target","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","e1","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76731de5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\r\n  const inputTextHandler = (e) => {\r\n    console.log(e.target.value);\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const submitToDoHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      { text: inputText, completed: false, id: Math.random() * 1000 },\r\n    ]);\r\n    setInputText(\"\");\r\n  };\r\n\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          value={inputText}\r\n          className=\"todo-input\"\r\n          onChange={inputTextHandler}\r\n        />\r\n        <button\r\n          className=\"todo-button\"\r\n          type=\"submit\"\r\n          onClick={submitToDoHandler}\r\n        >\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select name=\"todos\" className=\"filter-todo\" onChange={statusHandler}>\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"incomplete\">Incomplete</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((e1) => e1.id !== todo.id));\r\n  };\r\n\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"todo\">\r\n        <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n          {text}\r\n        </li>\r\n        <button onClick={completeHandler} className=\"complete-btn\">\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n        <button onClick={deleteHandler} className=\"trash-btn\">\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList({ todos, setTodos, filteredTodos }) {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo\r\n            todos={todos}\r\n            todo={todo}\r\n            setTodos={setTodos}\r\n            text={todo.text}\r\n            key={todo.id}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Form from \"./components/Form\";\r\nimport TodoList from \"./components/TodoList\";\r\n\r\nfunction App() {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getLocalTodos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filterHandler = () => {\r\n      switch (status) {\r\n        case \"completed\":\r\n          setFilteredTodos(todos.filter((todo) => todo.completed === true));\r\n          break;\r\n\r\n        case \"incomplete\":\r\n          setFilteredTodos(todos.filter((todo) => todo.completed === false));\r\n          break;\r\n\r\n        default:\r\n          setFilteredTodos(todos);\r\n          break;\r\n      }\r\n    };\r\n\r\n    const saveLocalTodos = () => {\r\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    };\r\n\r\n    filterHandler();\r\n    saveLocalTodos();\r\n  }, [todos, status]);\r\n\r\n  const getLocalTodos = () => {\r\n    if (localStorage.getItem(\"todos\") === null) {\r\n      localStorage.setItem(\"todos\", JSON.stringify([]));\r\n    } else {\r\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\r\n      setTodos(todoLocal);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header> Shivam's ToDo </header>\r\n      <Form\r\n        inputText={inputText}\r\n        setInputText={setInputText}\r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        setStatus={setStatus}\r\n      />\r\n      <TodoList\r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        inputText={inputText}\r\n        filteredTodos={filteredTodos}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}